<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>self.edge = 1
self.image = asrbg
self.w0 = 800
self.h0 = 800
self.rotspeed = -2
self.part = 40
self.col = 0
self.vk = 1
self.flashtime = 660
self.ftimer = 0
self.falpha = 0
self.image_alpha = 0
self.depth = 8
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (self.edge == 0)
    self.edge = 0.1
if (self.part == 0)
    self.part = 1
self.wp = (self.w0 / self.part)
self.hp = (self.h0 / self.part)
self.lside = view_xview[0]
self.rside = (view_xview[0] + view_wview[0])
self.side = 0
self.curx = 0
self.size = 1
self.col = (self.col + 1)
self.color = make_color_hsv(self.col, 233, 200)
if (self.col &gt; 254)
    self.col = 0
self.i = 0
while(true)
{
    if (self.i &lt; self.part)
    {
        draw_sprite_part_ext(self.image, self.image_index, ((self.wp * self.i) + self.x), 0, (self.wp * self.i), 999, (((room_width / 2) + (self.wp * self.i)) - 6), (0 - ((self.wp * self.i) / 2)), self.i, self.i, self.color, self.image_alpha)
        draw_sprite_part_ext(self.image, self.image_index, ((self.wp * self.i) + self.x), 0, (self.wp * self.i), 999, (((room_width / 2) - (self.wp * self.i)) + 6), (0 - ((self.wp * self.i) / 2)), (- self.i), self.i, self.color, self.image_alpha)
        self.i = (self.i + 1)
        continue
    }
    break
}
self.x = (self.x + self.rotspeed)
if (self.x &gt; 800)
    self.x = (self.x - 800)
if (self.x &lt; 0)
    self.x = (self.x + 800)
self.ftimer = (self.ftimer + 1)
if (self.ftimer &gt; 630)
    _temp_local_var_1 = (self.ftimer &lt; 671)
else
    _temp_local_var_1 = 0
if _temp_local_var_1
{
    self.falpha = (self.falpha + 0.025)
    draw_set_alpha(self.falpha)
    draw_set_color(c_white)
    ossafe_fill_rectangle(-10, -10, 999, 999)
}
if (self.ftimer &gt;= 671)
    _temp_local_var_2 = (self.ftimer &lt; 685)
else
    _temp_local_var_2 = 0
if _temp_local_var_2
{
    self.image_alpha = 0.5
    self.falpha = (self.falpha - 0.1)
    draw_set_alpha(self.falpha)
    draw_set_color(c_white)
    ossafe_fill_rectangle(-10, -10, 999, 999)
    if (instance_exists(fake_asriel)){
        with (fake_asriel){
        self.bk = 1
        }
    }
}
draw_set_alpha(1)



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
