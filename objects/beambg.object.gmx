<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>self.siner = 0
range = 1
timer = 9
bw = 120
mbw = bw
bw = 0
ar = 0.7
home = 0
last = 300
beamtime = 10
self.x = 320
army = lengthdir_y(150, ((- 26) - 90))
self.y = (((48 + 56) + army) - 20)
if (instance_exists(xhrt)) xhrt.depth = self.depth - 6
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_pixel(0, 0, c_red, 22, 5, false)
timer += 1
col = make_color_hsv((siner * 11), 190, 250)
col2 = make_color_hsv(((siner + 3) * 11), 190, 250)
col3 = make_color_hsv(((siner + 5) * 11), 140, 250)
ob = ((sin((siner / 2)) * (mbw / 5)) * (bw / mbw))
draw_set_alpha(ar)
if (timer == beamtime)
{
    ar = 0.7
    bw = 60
    if (range == 1)
        bw = 220
    if (range == 2)
        bw = 120
    mbw = bw
    bw = 0
}
siner = (siner + 1)
if (timer &gt; beamtime)
{
    if (timer &lt; (beamtime + 6))
        bw = (bw + (mbw / 5))
    if (bw &gt; 0)
    {
        if (home == 0)
        {
            draw_triangle_color(x, y, ((x + bw) + ob), (room_height + 10), ((x - bw) - ob), (room_height + 10), col, col2, col2, 0)
            draw_triangle_color(x, y, ((x + bw) + (ob / 2)), (room_height + 10), ((x - bw) - (ob / 2)), (room_height + 10), col, col2, col2, 0)
            draw_triangle_color(x, y, ((x + bw) - ob), (room_height + 10), ((x - bw) + ob), (room_height + 10), col, col3, col3, 0)
        }
        if (home == 1)
        {
            targetx = mouse_x
            targety = mouse_y
            tt = lengthdir_x(600, point_direction(x, y, targetx, targety))
            tt2 = lengthdir_y(600, point_direction(x, y, targetx, targety))
            draw_line_width_color(x, y, (x + tt), (y + tt2), (bw + (ob * 2)), col, col2)
            draw_line_width_color(x, y, (x + tt), (y + tt2), (bw + ob), col, col2)
            draw_line_width_color(x, y, (x + tt), (y + tt2), bw, col, col3)
            factor = (mbw / 60)
        }
        if ((last &gt; 0) &amp;&amp; (timer == 120))
        {
            bw = (bw + 100)
            mbw = (mbw + 80)
        }
        if ((last &gt; 0) &amp;&amp; (timer == 240))
        {
            bw = (bw + 400)
            mbw = (mbw + 260)
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
